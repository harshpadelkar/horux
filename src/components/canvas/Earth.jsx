/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';

export function Earth(props) {
  const { nodes, materials } = useGLTF('./planet/scene.gltf');
  return (
    <group {...props} dispose={null}>
      <group
        position={[-0.94, -0.89, -0.02]}
        rotation={[1.57, 0, 0]}
        scale={2.5}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.path0_1.geometry}
          material={materials['SVGMat.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.path0_2.geometry}
          material={materials['Material.001']}
        />
      </group>
    </group>
  );
}

useGLTF.preload('/chuchi.gltf');

// import React, { Suspense } from 'react';
// import { Canvas } from '@react-three/fiber';
// import {
//   OrbitControls,
//   Preload,
//   useGLTF,
//   Environment,
// } from '@react-three/drei';

// import CanvasLoader from '../Loader';

// const Earth = () => {
//   const earth = useGLTF('./planet/scene.gltf');

//   const { nodes, materials } = earth;

//   return (
//     <>
//
//       <primitive
//         object={earth.scene}
//         scale={2.5}
//         position-y={0}
//         rotation-y={0}
//       />
//     </>
//   );
// };

// const EarthCanvas = () => {
//   return (
//     <Canvas
//       shadows
//       frameloop="demand"
//       dpr={[1, 2]}
//       gl={{ preserveDrawingBuffer: true }}
//       camera={{
//         fov: 45,
//         near: 0.1,
//         far: 200,
//         position: [-4, 3, 6],
//       }}
//     >
//       <Suspense fallback={<CanvasLoader />}>
//         <OrbitControls
//           autoRotate
//           enableZoom={false}
//           maxPolarAngle={Math.PI / 2}
//           minPolarAngle={Math.PI / 2}
//         />

//         <Earth />

//         <Preload all />
//       </Suspense>
//     </Canvas>
//   );
// };

// export default EarthCanvas;
